# Generated from SubstraitLexer.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,61,619,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,1,0,1,0,1,0,1,0,5,0,184,
        8,0,10,0,12,0,187,9,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,4,1,196,8,1,11,
        1,12,1,197,1,1,3,1,201,8,1,1,1,5,1,204,8,1,10,1,12,1,207,9,1,1,1,
        1,1,1,1,1,1,1,1,1,2,4,2,215,8,2,11,2,12,2,216,1,2,1,2,1,3,1,3,1,
        4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,
        1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,
        1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,30,
        5,30,278,8,30,10,30,12,30,281,9,30,3,30,283,8,30,1,31,1,31,1,31,
        1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,
        1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,
        1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,
        1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
        1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,
        1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,
        1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,
        1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
        1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
        1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
        1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,
        1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
        1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,
        1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,
        1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,
        1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,
        1,58,1,58,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,61,1,61,1,61,
        1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,
        1,64,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,
        1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,70,1,70,
        1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,
        1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,75,
        1,75,1,75,1,76,1,76,5,76,591,8,76,10,76,12,76,594,9,76,1,77,1,77,
        1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,
        1,84,1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,0,0,89,1,1,3,2,5,3,
        7,0,9,0,11,0,13,0,15,0,17,0,19,0,21,0,23,0,25,0,27,0,29,0,31,0,33,
        0,35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,
        0,61,0,63,4,65,5,67,6,69,7,71,8,73,9,75,10,77,11,79,12,81,13,83,
        14,85,15,87,16,89,17,91,18,93,19,95,20,97,21,99,22,101,23,103,24,
        105,25,107,26,109,27,111,28,113,29,115,30,117,31,119,32,121,33,123,
        34,125,35,127,36,129,37,131,38,133,39,135,40,137,41,139,42,141,43,
        143,44,145,45,147,46,149,47,151,48,153,49,155,50,157,51,159,52,161,
        53,163,54,165,55,167,56,169,57,171,58,173,59,175,60,177,61,1,0,34,
        2,0,10,10,13,13,1,0,42,42,2,0,42,42,47,47,3,0,9,10,13,13,32,32,2,
        0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,
        2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,
        104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,
        0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,
        111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,
        83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,118,
        2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,
        122,122,1,0,48,57,1,0,49,57,3,0,65,90,95,95,97,122,4,0,48,57,65,
        90,95,95,97,122,598,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
        0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,
        0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
        0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,
        0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
        113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,
        0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,
        1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,
        0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,
        0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,
        159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,
        0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,
        1,0,0,0,1,179,1,0,0,0,3,190,1,0,0,0,5,214,1,0,0,0,7,220,1,0,0,0,
        9,222,1,0,0,0,11,224,1,0,0,0,13,226,1,0,0,0,15,228,1,0,0,0,17,230,
        1,0,0,0,19,232,1,0,0,0,21,234,1,0,0,0,23,236,1,0,0,0,25,238,1,0,
        0,0,27,240,1,0,0,0,29,242,1,0,0,0,31,244,1,0,0,0,33,246,1,0,0,0,
        35,248,1,0,0,0,37,250,1,0,0,0,39,252,1,0,0,0,41,254,1,0,0,0,43,256,
        1,0,0,0,45,258,1,0,0,0,47,260,1,0,0,0,49,262,1,0,0,0,51,264,1,0,
        0,0,53,266,1,0,0,0,55,268,1,0,0,0,57,270,1,0,0,0,59,272,1,0,0,0,
        61,282,1,0,0,0,63,284,1,0,0,0,65,287,1,0,0,0,67,292,1,0,0,0,69,297,
        1,0,0,0,71,305,1,0,0,0,73,308,1,0,0,0,75,312,1,0,0,0,77,316,1,0,
        0,0,79,320,1,0,0,0,81,325,1,0,0,0,83,330,1,0,0,0,85,337,1,0,0,0,
        87,344,1,0,0,0,89,354,1,0,0,0,91,367,1,0,0,0,93,372,1,0,0,0,95,377,
        1,0,0,0,97,391,1,0,0,0,99,404,1,0,0,0,101,409,1,0,0,0,103,417,1,
        0,0,0,105,437,1,0,0,0,107,460,1,0,0,0,109,470,1,0,0,0,111,478,1,
        0,0,0,113,490,1,0,0,0,115,497,1,0,0,0,117,505,1,0,0,0,119,510,1,
        0,0,0,121,514,1,0,0,0,123,518,1,0,0,0,125,521,1,0,0,0,127,526,1,
        0,0,0,129,530,1,0,0,0,131,535,1,0,0,0,133,538,1,0,0,0,135,543,1,
        0,0,0,137,549,1,0,0,0,139,554,1,0,0,0,141,558,1,0,0,0,143,562,1,
        0,0,0,145,568,1,0,0,0,147,574,1,0,0,0,149,580,1,0,0,0,151,585,1,
        0,0,0,153,588,1,0,0,0,155,595,1,0,0,0,157,597,1,0,0,0,159,599,1,
        0,0,0,161,601,1,0,0,0,163,603,1,0,0,0,165,605,1,0,0,0,167,607,1,
        0,0,0,169,609,1,0,0,0,171,611,1,0,0,0,173,613,1,0,0,0,175,615,1,
        0,0,0,177,617,1,0,0,0,179,180,5,47,0,0,180,181,5,47,0,0,181,185,
        1,0,0,0,182,184,8,0,0,0,183,182,1,0,0,0,184,187,1,0,0,0,185,183,
        1,0,0,0,185,186,1,0,0,0,186,188,1,0,0,0,187,185,1,0,0,0,188,189,
        6,0,0,0,189,2,1,0,0,0,190,191,5,47,0,0,191,192,5,42,0,0,192,200,
        1,0,0,0,193,201,8,1,0,0,194,196,5,42,0,0,195,194,1,0,0,0,196,197,
        1,0,0,0,197,195,1,0,0,0,197,198,1,0,0,0,198,199,1,0,0,0,199,201,
        8,2,0,0,200,193,1,0,0,0,200,195,1,0,0,0,201,205,1,0,0,0,202,204,
        5,42,0,0,203,202,1,0,0,0,204,207,1,0,0,0,205,203,1,0,0,0,205,206,
        1,0,0,0,206,208,1,0,0,0,207,205,1,0,0,0,208,209,5,42,0,0,209,210,
        5,47,0,0,210,211,1,0,0,0,211,212,6,1,0,0,212,4,1,0,0,0,213,215,7,
        3,0,0,214,213,1,0,0,0,215,216,1,0,0,0,216,214,1,0,0,0,216,217,1,
        0,0,0,217,218,1,0,0,0,218,219,6,2,0,0,219,6,1,0,0,0,220,221,7,4,
        0,0,221,8,1,0,0,0,222,223,7,5,0,0,223,10,1,0,0,0,224,225,7,6,0,0,
        225,12,1,0,0,0,226,227,7,7,0,0,227,14,1,0,0,0,228,229,7,8,0,0,229,
        16,1,0,0,0,230,231,7,9,0,0,231,18,1,0,0,0,232,233,7,10,0,0,233,20,
        1,0,0,0,234,235,7,11,0,0,235,22,1,0,0,0,236,237,7,12,0,0,237,24,
        1,0,0,0,238,239,7,13,0,0,239,26,1,0,0,0,240,241,7,14,0,0,241,28,
        1,0,0,0,242,243,7,15,0,0,243,30,1,0,0,0,244,245,7,16,0,0,245,32,
        1,0,0,0,246,247,7,17,0,0,247,34,1,0,0,0,248,249,7,18,0,0,249,36,
        1,0,0,0,250,251,7,19,0,0,251,38,1,0,0,0,252,253,7,20,0,0,253,40,
        1,0,0,0,254,255,7,21,0,0,255,42,1,0,0,0,256,257,7,22,0,0,257,44,
        1,0,0,0,258,259,7,23,0,0,259,46,1,0,0,0,260,261,7,24,0,0,261,48,
        1,0,0,0,262,263,7,25,0,0,263,50,1,0,0,0,264,265,7,26,0,0,265,52,
        1,0,0,0,266,267,7,27,0,0,267,54,1,0,0,0,268,269,7,28,0,0,269,56,
        1,0,0,0,270,271,7,29,0,0,271,58,1,0,0,0,272,273,7,30,0,0,273,60,
        1,0,0,0,274,283,5,48,0,0,275,279,7,31,0,0,276,278,7,30,0,0,277,276,
        1,0,0,0,278,281,1,0,0,0,279,277,1,0,0,0,279,280,1,0,0,0,280,283,
        1,0,0,0,281,279,1,0,0,0,282,274,1,0,0,0,282,275,1,0,0,0,283,62,1,
        0,0,0,284,285,3,23,11,0,285,286,3,17,8,0,286,64,1,0,0,0,287,288,
        3,45,22,0,288,289,3,21,10,0,289,290,3,15,7,0,290,291,3,33,16,0,291,
        66,1,0,0,0,292,293,3,15,7,0,293,294,3,29,14,0,294,295,3,43,21,0,
        295,296,3,15,7,0,296,68,1,0,0,0,297,298,3,9,4,0,298,299,3,35,17,
        0,299,300,3,35,17,0,300,301,3,29,14,0,301,302,3,15,7,0,302,303,3,
        7,3,0,303,304,3,33,16,0,304,70,1,0,0,0,305,306,3,23,11,0,306,307,
        5,56,0,0,307,72,1,0,0,0,308,309,3,23,11,0,309,310,5,49,0,0,310,311,
        5,54,0,0,311,74,1,0,0,0,312,313,3,23,11,0,313,314,5,51,0,0,314,315,
        5,50,0,0,315,76,1,0,0,0,316,317,3,23,11,0,317,318,5,54,0,0,318,319,
        5,52,0,0,319,78,1,0,0,0,320,321,3,17,8,0,321,322,3,37,18,0,322,323,
        5,51,0,0,323,324,5,50,0,0,324,80,1,0,0,0,325,326,3,17,8,0,326,327,
        3,37,18,0,327,328,5,54,0,0,328,329,5,52,0,0,329,82,1,0,0,0,330,331,
        3,43,21,0,331,332,3,45,22,0,332,333,3,41,20,0,333,334,3,23,11,0,
        334,335,3,33,16,0,335,336,3,19,9,0,336,84,1,0,0,0,337,338,3,9,4,
        0,338,339,3,23,11,0,339,340,3,33,16,0,340,341,3,7,3,0,341,342,3,
        41,20,0,342,343,3,55,27,0,343,86,1,0,0,0,344,345,3,45,22,0,345,346,
        3,23,11,0,346,347,3,31,15,0,347,348,3,15,7,0,348,349,3,43,21,0,349,
        350,3,45,22,0,350,351,3,7,3,0,351,352,3,31,15,0,352,353,3,37,18,
        0,353,88,1,0,0,0,354,355,3,45,22,0,355,356,3,23,11,0,356,357,3,31,
        15,0,357,358,3,15,7,0,358,359,3,43,21,0,359,360,3,45,22,0,360,361,
        3,7,3,0,361,362,3,31,15,0,362,363,3,37,18,0,363,364,5,95,0,0,364,
        365,3,45,22,0,365,366,3,57,28,0,366,90,1,0,0,0,367,368,3,13,6,0,
        368,369,3,7,3,0,369,370,3,45,22,0,370,371,3,15,7,0,371,92,1,0,0,
        0,372,373,3,45,22,0,373,374,3,23,11,0,374,375,3,31,15,0,375,376,
        3,15,7,0,376,94,1,0,0,0,377,378,3,23,11,0,378,379,3,33,16,0,379,
        380,3,45,22,0,380,381,3,15,7,0,381,382,3,41,20,0,382,383,3,49,24,
        0,383,384,3,7,3,0,384,385,3,29,14,0,385,386,5,95,0,0,386,387,3,55,
        27,0,387,388,3,15,7,0,388,389,3,7,3,0,389,390,3,41,20,0,390,96,1,
        0,0,0,391,392,3,23,11,0,392,393,3,33,16,0,393,394,3,45,22,0,394,
        395,3,15,7,0,395,396,3,41,20,0,396,397,3,49,24,0,397,398,3,7,3,0,
        398,399,3,29,14,0,399,400,5,95,0,0,400,401,3,13,6,0,401,402,3,7,
        3,0,402,403,3,55,27,0,403,98,1,0,0,0,404,405,3,47,23,0,405,406,3,
        47,23,0,406,407,3,23,11,0,407,408,3,13,6,0,408,100,1,0,0,0,409,410,
        3,13,6,0,410,411,3,15,7,0,411,412,3,11,5,0,412,413,3,23,11,0,413,
        414,3,31,15,0,414,415,3,7,3,0,415,416,3,29,14,0,416,102,1,0,0,0,
        417,418,3,37,18,0,418,419,3,41,20,0,419,420,3,15,7,0,420,421,3,11,
        5,0,421,422,3,23,11,0,422,423,3,43,21,0,423,424,3,23,11,0,424,425,
        3,35,17,0,425,426,3,33,16,0,426,427,5,95,0,0,427,428,3,45,22,0,428,
        429,3,23,11,0,429,430,3,31,15,0,430,431,3,15,7,0,431,432,3,43,21,
        0,432,433,3,45,22,0,433,434,3,7,3,0,434,435,3,31,15,0,435,436,3,
        37,18,0,436,104,1,0,0,0,437,438,3,37,18,0,438,439,3,41,20,0,439,
        440,3,15,7,0,440,441,3,11,5,0,441,442,3,23,11,0,442,443,3,43,21,
        0,443,444,3,23,11,0,444,445,3,35,17,0,445,446,3,33,16,0,446,447,
        5,95,0,0,447,448,3,45,22,0,448,449,3,23,11,0,449,450,3,31,15,0,450,
        451,3,15,7,0,451,452,3,43,21,0,452,453,3,45,22,0,453,454,3,7,3,0,
        454,455,3,31,15,0,455,456,3,37,18,0,456,457,5,95,0,0,457,458,3,45,
        22,0,458,459,3,57,28,0,459,106,1,0,0,0,460,461,3,17,8,0,461,462,
        3,23,11,0,462,463,3,53,26,0,463,464,3,15,7,0,464,465,3,13,6,0,465,
        466,3,11,5,0,466,467,3,21,10,0,467,468,3,7,3,0,468,469,3,41,20,0,
        469,108,1,0,0,0,470,471,3,49,24,0,471,472,3,7,3,0,472,473,3,41,20,
        0,473,474,3,11,5,0,474,475,3,21,10,0,475,476,3,7,3,0,476,477,3,41,
        20,0,477,110,1,0,0,0,478,479,3,17,8,0,479,480,3,23,11,0,480,481,
        3,53,26,0,481,482,3,15,7,0,482,483,3,13,6,0,483,484,3,9,4,0,484,
        485,3,23,11,0,485,486,3,33,16,0,486,487,3,7,3,0,487,488,3,41,20,
        0,488,489,3,55,27,0,489,112,1,0,0,0,490,491,3,43,21,0,491,492,3,
        45,22,0,492,493,3,41,20,0,493,494,3,47,23,0,494,495,3,11,5,0,495,
        496,3,45,22,0,496,114,1,0,0,0,497,498,3,33,16,0,498,499,3,43,21,
        0,499,500,3,45,22,0,500,501,3,41,20,0,501,502,3,47,23,0,502,503,
        3,11,5,0,503,504,3,45,22,0,504,116,1,0,0,0,505,506,3,29,14,0,506,
        507,3,23,11,0,507,508,3,43,21,0,508,509,3,45,22,0,509,118,1,0,0,
        0,510,511,3,31,15,0,511,512,3,7,3,0,512,513,3,37,18,0,513,120,1,
        0,0,0,514,515,3,7,3,0,515,516,3,33,16,0,516,517,3,55,27,0,517,122,
        1,0,0,0,518,519,3,47,23,0,519,520,5,33,0,0,520,124,1,0,0,0,521,522,
        3,9,4,0,522,523,3,35,17,0,523,524,3,35,17,0,524,525,3,29,14,0,525,
        126,1,0,0,0,526,527,3,43,21,0,527,528,3,45,22,0,528,529,3,41,20,
        0,529,128,1,0,0,0,530,531,3,49,24,0,531,532,3,9,4,0,532,533,3,23,
        11,0,533,534,3,33,16,0,534,130,1,0,0,0,535,536,3,45,22,0,536,537,
        3,43,21,0,537,132,1,0,0,0,538,539,3,45,22,0,539,540,3,43,21,0,540,
        541,3,45,22,0,541,542,3,57,28,0,542,134,1,0,0,0,543,544,3,23,11,
        0,544,545,3,55,27,0,545,546,3,15,7,0,546,547,3,7,3,0,547,548,3,41,
        20,0,548,136,1,0,0,0,549,550,3,23,11,0,550,551,3,13,6,0,551,552,
        3,7,3,0,552,553,3,55,27,0,553,138,1,0,0,0,554,555,3,13,6,0,555,556,
        3,15,7,0,556,557,3,11,5,0,557,140,1,0,0,0,558,559,3,37,18,0,559,
        560,3,45,22,0,560,561,3,43,21,0,561,142,1,0,0,0,562,563,3,37,18,
        0,563,564,3,45,22,0,564,565,3,43,21,0,565,566,3,45,22,0,566,567,
        3,57,28,0,567,144,1,0,0,0,568,569,3,17,8,0,569,570,3,11,5,0,570,
        571,3,21,10,0,571,572,3,7,3,0,572,573,3,41,20,0,573,146,1,0,0,0,
        574,575,3,49,24,0,575,576,3,11,5,0,576,577,3,21,10,0,577,578,3,7,
        3,0,578,579,3,41,20,0,579,148,1,0,0,0,580,581,3,17,8,0,581,582,3,
        9,4,0,582,583,3,23,11,0,583,584,3,33,16,0,584,150,1,0,0,0,585,586,
        5,58,0,0,586,587,5,58,0,0,587,152,1,0,0,0,588,592,7,32,0,0,589,591,
        7,33,0,0,590,589,1,0,0,0,591,594,1,0,0,0,592,590,1,0,0,0,592,593,
        1,0,0,0,593,154,1,0,0,0,594,592,1,0,0,0,595,596,5,60,0,0,596,156,
        1,0,0,0,597,598,5,62,0,0,598,158,1,0,0,0,599,600,5,40,0,0,600,160,
        1,0,0,0,601,602,5,41,0,0,602,162,1,0,0,0,603,604,5,91,0,0,604,164,
        1,0,0,0,605,606,5,93,0,0,606,166,1,0,0,0,607,608,5,44,0,0,608,168,
        1,0,0,0,609,610,5,61,0,0,610,170,1,0,0,0,611,612,5,58,0,0,612,172,
        1,0,0,0,613,614,5,63,0,0,614,174,1,0,0,0,615,616,5,35,0,0,616,176,
        1,0,0,0,617,618,5,46,0,0,618,178,1,0,0,0,9,0,185,197,200,205,216,
        279,282,592,1,0,1,0
    ]

class SubstraitLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LineComment = 1
    BlockComment = 2
    Whitespace = 3
    If = 4
    Then = 5
    Else = 6
    Boolean = 7
    I8 = 8
    I16 = 9
    I32 = 10
    I64 = 11
    FP32 = 12
    FP64 = 13
    String = 14
    Binary = 15
    Timestamp = 16
    TimestampTZ = 17
    Date = 18
    Time = 19
    IntervalYear = 20
    IntervalDay = 21
    UUID = 22
    Decimal = 23
    PrecisionTimestamp = 24
    PrecisionTimestampTZ = 25
    FixedChar = 26
    VarChar = 27
    FixedBinary = 28
    Struct = 29
    NStruct = 30
    List = 31
    Map = 32
    ANY = 33
    UserDefined = 34
    Bool = 35
    Str = 36
    VBin = 37
    Ts = 38
    TsTZ = 39
    IYear = 40
    IDay = 41
    Dec = 42
    PTs = 43
    PTsTZ = 44
    FChar = 45
    VChar = 46
    FBin = 47
    DOUBLE_COLON = 48
    IDENTIFIER = 49
    O_ANGLE_BRACKET = 50
    C_ANGLE_BRACKET = 51
    OPAREN = 52
    CPAREN = 53
    OBRACKET = 54
    CBRACKET = 55
    COMMA = 56
    EQ = 57
    COLON = 58
    QMARK = 59
    HASH = 60
    DOT = 61

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'::'", "'<'", "'>'", "'('", "')'", "'['", "']'", "','", "'='", 
            "':'", "'?'", "'#'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "LineComment", "BlockComment", "Whitespace", "If", "Then", "Else", 
            "Boolean", "I8", "I16", "I32", "I64", "FP32", "FP64", "String", 
            "Binary", "Timestamp", "TimestampTZ", "Date", "Time", "IntervalYear", 
            "IntervalDay", "UUID", "Decimal", "PrecisionTimestamp", "PrecisionTimestampTZ", 
            "FixedChar", "VarChar", "FixedBinary", "Struct", "NStruct", 
            "List", "Map", "ANY", "UserDefined", "Bool", "Str", "VBin", 
            "Ts", "TsTZ", "IYear", "IDay", "Dec", "PTs", "PTsTZ", "FChar", 
            "VChar", "FBin", "DOUBLE_COLON", "IDENTIFIER", "O_ANGLE_BRACKET", 
            "C_ANGLE_BRACKET", "OPAREN", "CPAREN", "OBRACKET", "CBRACKET", 
            "COMMA", "EQ", "COLON", "QMARK", "HASH", "DOT" ]

    ruleNames = [ "LineComment", "BlockComment", "Whitespace", "A", "B", 
                  "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", 
                  "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", 
                  "Y", "Z", "DIGIT", "INTEGER", "If", "Then", "Else", "Boolean", 
                  "I8", "I16", "I32", "I64", "FP32", "FP64", "String", "Binary", 
                  "Timestamp", "TimestampTZ", "Date", "Time", "IntervalYear", 
                  "IntervalDay", "UUID", "Decimal", "PrecisionTimestamp", 
                  "PrecisionTimestampTZ", "FixedChar", "VarChar", "FixedBinary", 
                  "Struct", "NStruct", "List", "Map", "ANY", "UserDefined", 
                  "Bool", "Str", "VBin", "Ts", "TsTZ", "IYear", "IDay", 
                  "Dec", "PTs", "PTsTZ", "FChar", "VChar", "FBin", "DOUBLE_COLON", 
                  "IDENTIFIER", "O_ANGLE_BRACKET", "C_ANGLE_BRACKET", "OPAREN", 
                  "CPAREN", "OBRACKET", "CBRACKET", "COMMA", "EQ", "COLON", 
                  "QMARK", "HASH", "DOT" ]

    grammarFileName = "SubstraitLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


